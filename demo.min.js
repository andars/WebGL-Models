var Camera=function(){this.matrix=mat4.create();this.rotation=vec3.create();this.position=vec3.create();this.dir=vec3.create();this.cammat=mat4.create();var a=this;this.moving=this.dirty=!1;document.getElementById("canvas").addEventListener("mousemove",function(b){if(a.moving){var c=b.movementX||b.mozMovementX||b.webkitMovementX||0;a.rotation[0]+=0.3*(3.1415*(b.movementY||b.mozMovementY||b.webkitMovementY||0)/180);1.57075<a.rotation[0]&&(a.rotation[0]-=1.57075);a.rotation[1]+=0.3*(3.1415*c/180);a.dirty=
!0}});var c=function(){a.moving^=1};document.addEventListener("webkitpointerlockchange",c);document.addEventListener("mozpointerlockchange",c)};
Camera.prototype.update=function(){eventHandler.keyStates[32]&&(this.dir[1]+=0.25,this.dirty=!0);eventHandler.keyStates[16]&&(this.dir[1]-=0.25,this.dirty=!0);eventHandler.keyStates[39]&&(this.dir[0]+=0.25,this.dirty=!0);eventHandler.keyStates[37]&&(this.dir[0]-=0.25,this.dirty=!0);eventHandler.keyStates[40]&&(this.dir[2]+=0.25,this.dirty=!0);eventHandler.keyStates[38]&&(this.dir[2]-=0.25,this.dirty=!0);this.dir!=[0,0,0]&&(mat4.identity(this.matrix),mat4.rotateY(this.matrix,this.matrix,this.rotation[1]),
mat4.invert(this.matrix,this.matrix),vec3.transformMat4(this.dir,this.dir,this.matrix),vec3.add(this.position,this.position,this.dir),vec3.set(this.dir,0,0,0))};Camera.prototype.getMatrix=function(){mat4.identity(this.matrix);mat4.rotateX(this.matrix,this.matrix,this.rotation[0]);mat4.rotateY(this.matrix,this.matrix,this.rotation[1]);mat4.translate(this.matrix,this.matrix,[-this.position[0],-this.position[1],-this.position[2]]);return this.matrix};
var eventHandler={keyStates:[],self:this,dirty:0,setup:function(){console.log("setup");document.getElementById("canvas").addEventListener("keyup",function(a){eventHandler.keyStates[a.keyCode]=!1});document.getElementById("canvas").addEventListener("keydown",function(a){console.log(a.keyCode);-1<[32,37,38,39,40].indexOf(a.keyCode)&&a.preventDefault();eventHandler.keyStates[a.keyCode]=!0});document.getElementById("canvas").setAttribute("tabindex","0");document.getElementById("canvas").focus()},onMouseMove:function(){}},
gl,pMatrix=mat4.create();function checkUndefined(a,c){for(var b=0;b<c.length;++b)void 0===c[b]&&console.error("undefined passed to gl."+a+"("+WebGLDebugUtils.glFunctionArgsToString(a,c)+")")}function logGLCall(a,c){console.log("gl."+a+"("+WebGLDebugUtils.glFunctionArgsToString(a,c)+")")}function throwOnGLError(a,c){throw WebGLDebugUtils.glEnumToString(a)+" was caused by call to: "+c;}
function initGL(a){try{gl=a.getContext("experimental-webgl"),gl.viewportWidth=a.width,gl.viewportHeight=a.height}catch(c){}gl||alert("Could not initialise WebGL, sorry :-(")}
function getShader(a,c){var b=document.getElementById(c);if(!b)return null;for(var e="",d=b.firstChild;d;)3==d.nodeType&&(e+=d.textContent),d=d.nextSibling;if("x-shader/x-fragment"==b.type)b=a.createShader(a.FRAGMENT_SHADER);else if("x-shader/x-vertex"==b.type)b=a.createShader(a.VERTEX_SHADER);else return null;a.shaderSource(b,e);a.compileShader(b);return!a.getShaderParameter(b,a.COMPILE_STATUS)?(alert(a.getShaderInfoLog(b)),null):b}var shaderProgram;
function initShaders(){var a=getShader(gl,"shader-fs"),c=getShader(gl,"shader-vs");shaderProgram=gl.createProgram();gl.attachShader(shaderProgram,c);gl.attachShader(shaderProgram,a);gl.linkProgram(shaderProgram);gl.getProgramParameter(shaderProgram,gl.LINK_STATUS)||alert("Could not initialise shaders");gl.useProgram(shaderProgram);shaderProgram.vertexPositionAttribute=gl.getAttribLocation(shaderProgram,"aVertexPosition");gl.enableVertexAttribArray(shaderProgram.vertexPositionAttribute);shaderProgram.vertexColorAttribute=
gl.getAttribLocation(shaderProgram,"aVertexColor");gl.enableVertexAttribArray(shaderProgram.vertexColorAttribute);shaderProgram.pMatrixUniform=gl.getUniformLocation(shaderProgram,"uPMatrix");shaderProgram.mMatrixUniform=gl.getUniformLocation(shaderProgram,"uMMatrix");shaderProgram.vMatrixUniform=gl.getUniformLocation(shaderProgram,"uVMatrix");console.log(shaderProgram.mMatrixUniform)}var modelMatrix=mat4.create(),modelMatrixStack=[];
function modelPush(){var a=mat4.clone(modelMatrix);modelMatrixStack.push(a)}function modelPop(){modelMatrix=modelMatrixStack.pop()}function setMatrixUniforms(a){gl.uniformMatrix4fv(shaderProgram.mMatrixUniform,!1,a)}var pyramid,cam;
function initScene(){var a;pyramid=new Model;cam=new Camera;for(var c=0;1E3>c;c++)a=pyramid.createInstance(),mat4.translate(a.matrix,a.matrix,[100*(Math.random()-0.5),100*(Math.random()-0.5),100*(Math.random()-0.5)]);mat4.perspective(pMatrix,45,gl.viewportWidth/gl.viewportHeight,0.1,100);gl.uniformMatrix4fv(shaderProgram.pMatrixUniform,!1,pMatrix);mat4.lookAt(viewMatrix,[0,0,-15],[0,0,0],[0,1,0])}var viewMatrix=mat4.create();
function drawScene(){gl.viewport(0,0,gl.viewportWidth,gl.viewportHeight);gl.clear(gl.COLOR_BUFFER_BIT|gl.DEPTH_BUFFER_BIT);gl.uniformMatrix4fv(shaderProgram.vMatrixUniform,!1,cam.getMatrix());mat4.identity(modelMatrix);pyramid.renderInstances()}var lasttime=0;
function update(){void 0===update.lasttime&&(update.lasttime=0);webkitRequestAnimationFrame(update);drawScene();update.currtime=(new Date).getTime();update.elapsed=update.currtime-update.lasttime;cam.update(update.elapsed);update.lasttime=update.currtime}function webGLStart(){var a=document.getElementById("canvas");eventHandler.setup();initGL(a);initShaders();initScene(a);gl.clearColor(0,0,0,1);gl.enable(gl.DEPTH_TEST);update()}
function lockPointer(){var a=document.getElementById("canvas");a.requestPointerLock=a.requestPointerLock||a.mozRequestPointerLock||a.webkitRequestPointerLock;a.requestPointerLock();a.focus()}
var vertices=[0,1,0,-1,-1,1,1,-1,1,0,1,0,1,-1,1,1,-1,-1,0,1,0,1,-1,-1,-1,-1,-1,0,1,0,-1,-1,-1,-1,-1,1,-1,-1,1,1,-1,1,-1,-1,-1,1,-1,-1,-1,-1,-1,1,-1,1],colors=[1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,0,0,1,1,1,0,0,1,1,1,1,1,1,0,0,1,0,0,1,1],Model=function(){this.dirty=!1;this.position=vec3.create();this.rotation=quat.create();this.instances=[];this.matrix=mat4.create();mat4.fromRotationTranslation(this.matrix,this.rotation,this.position);
this.vertexbuffer=gl.createBuffer();this.colorbuffer=gl.createBuffer();gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexbuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(vertices),gl.STATIC_DRAW);this.numItems=18;gl.bindBuffer(gl.ARRAY_BUFFER,this.colorbuffer);gl.bufferData(gl.ARRAY_BUFFER,new Float32Array(colors),gl.STATIC_DRAW);console.log("model created")};
Model.prototype.render=function(){modelPush();var a=this.matrix;this.dirty&&mat4.fromRotationTranslation(a,this.rotation,this.position);gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexbuffer);gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,3,gl.FLOAT,!1,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.colorbuffer);gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,4,gl.FLOAT,!1,0,0);setMatrixUniforms(a);gl.drawArrays(gl.TRIANGLES,0,this.numItems);modelPop()};
Model.prototype.update=function(a){var c=this.rotation;a=3.1415*(a/1E3);var b=vec3.create();eventHandler.keyStates[87]&&(quat.rotateX(c,c,a),this.dirty=!0);eventHandler.keyStates[83]&&(quat.rotateX(c,c,-a),this.dirty=!0);eventHandler.keyStates[65]&&(quat.rotateY(c,c,a),this.dirty=!0);eventHandler.keyStates[68]&&(quat.rotateY(c,c,-a),this.dirty=!0);eventHandler.keyStates[69]&&(quat.rotateZ(c,c,a),this.dirty=!0);eventHandler.keyStates[81]&&(quat.rotateZ(c,c,-a),this.dirty=!0);eventHandler.keyStates[32]&&
(b[1]+=0.25,this.dirty=!0);eventHandler.keyStates[16]&&(b[1]-=0.25,this.dirty=!0);eventHandler.keyStates[39]&&(b[0]+=0.25,this.dirty=!0);eventHandler.keyStates[37]&&(b[0]-=0.25,this.dirty=!0);eventHandler.keyStates[40]&&(b[2]+=0.25,this.dirty=!0);eventHandler.keyStates[38]&&(b[2]-=0.25,this.dirty=!0);vec3.add(this.position,this.position,b)};Model.prototype.createInstance=function(){var a=new Instance(this);this.instances.push(a);return a};
Model.prototype.renderInstances=function(){var a;gl.bindBuffer(gl.ARRAY_BUFFER,this.vertexbuffer);gl.vertexAttribPointer(shaderProgram.vertexPositionAttribute,3,gl.FLOAT,!1,0,0);gl.bindBuffer(gl.ARRAY_BUFFER,this.colorbuffer);gl.vertexAttribPointer(shaderProgram.vertexColorAttribute,4,gl.FLOAT,!1,0,0);for(var c in this.instances)a=this.instances[c],setMatrixUniforms(a.matrix),gl.drawArrays(gl.TRIANGLES,0,this.numItems)};
var Instance=function(a){this.parent=a;this.position=vec3.create();this.matrix=mat4.create()};Instance.prototype={update:function(){}};